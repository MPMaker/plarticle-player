<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>zui_set_anchor(0, 0);
zui_set_size(__parent.__width, 24);

totalitems = 0;
items = 0;

selected = -1;
selectx = 0;
opening = 0;
opened = -1;
lastmenu = noone;

key_map = ds_map_create();

for (var i = 0; i &lt; 10; ++i)
 key_map[? 48 + i] = string(i);

for (var i = 0; i &lt; 26; ++i)
 key_map[? 65 + i] = chr(i + 65);

for (var i = 0; i &lt; 12; ++i)
 key_map[? 112 + i] = "F" + string(i + 1);

key_map[? vk_space] = "Space";
key_map[? vk_return] = "Enter";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>__width = __parent.__width;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (opening &amp;&amp; selected != opened &amp;&amp; selected &gt;= 0) {
 with (lastmenu)
  zui_destroy();

 if (menu_childs[item[selected]] &gt; 0) {
  var menu_id = item[selected];
  with (__parent) {
   other.lastmenu = zui_create(other.selectx, other.__y + other.__height, objUIMenuSub, other.depth - 1);
   with (other.lastmenu) {
    index = menu_id;
    event_user(0);
   }
  }
 }
 
 opened = selected;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Process Shortcut
var enable_shortcut = 1;

with (zui_get_parent()) {
 for (var i = 0; i &lt; __childs; ++i) {
  if (other.depth &gt;= __child[i].depth &amp;&amp; __child[i] != other.id) {
   enable_shortcut = 0;
   break;
  }
 }
}

if (enable_shortcut) {
 for (var i = 1; i &lt; 128; ++i) {
  if (keyboard_check_pressed(i) &amp;&amp; ds_map_exists(key_map, i)) {
   var keystring = "";
   
   if (keyboard_check(vk_lcontrol))
    keystring += "Ctrl+";
   
   if (keyboard_check(vk_lalt))
    keystring += "Alt+";
    
   if (keyboard_check(vk_lshift))
    keystring += "Shift+";
   
   keystring += key_map[? i];
  
   for (var j = 0; j &lt; totalitems; ++j) {
    if (menu_callback[j] &gt;= 0 &amp;&amp; menu_shortcut[j] = keystring) {
     script_execute(menu_callback[j]);
    }
   }
   break;
  }
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (opening) {
 var called = 0;

 with (objUIMenuSub) {
  if (zui_get_hover()) {
   event_user(1);
   called = 1;
  }
 }
 
 if (called)
  event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!opening &amp;&amp; zui_get_hover() &amp;&amp; selected &gt;= 0) {
 opening = 1;
 opened = -1;
} else {
 with (objUIMenuSub) {
  if (zui_get_hover()) {
   event_user(1);
  }
 }
 
 event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (objUIMenuSub)
 zui_destroy();
 
selected = -1;
opened = -1;
opening = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ui_draw_blured(0, 0, __dx - __ax * __sx, __dy - __ay * __sy, __width, __height);
draw_sprite_ext(sprMenuBar, 1, 0, 0, __width / 32, 1, 0, $ffffff, 1);

draw_set_font(fntMain);
draw_set_halign(0);
draw_set_valign(1);

var dx = 0;
var dy = round(__height * 0.5);
var realx = __dx - __ax * __sx;

selected = -1;
for (var i = 0; i &lt; items; ++i) {
 var dsize = string_width(menu_caption[item[i]]) + 18;
 var hovered = 0;
 
 if (opened = i)
  hovered = 1;
 
 if (__hover &amp;&amp; global.__zui_mx &gt;= realx + dx &amp;&amp; global.__zui_mx &lt; realx + dx + dsize) {
  hovered = 1;
  selected = i;
  selectx = dx;
 }
 
 if (hovered)
  draw_sprite_ext(sprMenuBar, 1, dx, 0, dsize / 32, 1, 0, $ffffff, 1);

 draw_set_color($ffffff);
 draw_text(dx + 9, dy - 1, menu_caption[item[i]]);
 
 dx += dsize;
}
draw_set_color($ffffff);

draw_set_font(fntMain);
draw_set_halign(0);
draw_set_valign(1);
draw_set_color(c_black);
draw_text(max(__width -90,520), 12, 'FPS: '+string(fps)+'/'+string(room_speed));
draw_text(max(__width -190,420), 12, 'Particles: '+string(part_particles_count(sys.Sname)));
draw_text(max(__width -330,280), 12, 'Mouse: ('+string(mouse_x-sys.x)+','+string(mouse_y-sys.y)+')');



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
