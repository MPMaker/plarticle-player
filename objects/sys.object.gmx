<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.version_string = string_copy(string(date_get_year(GM_build_date)), 3, 2);
global.version_string += string_set_length(string(date_get_month(GM_build_date)), "0", 2);
global.version_string += string_set_length(string(date_get_day(GM_build_date)), "0", 2);
global.version_string += " " + string_set_length(string(date_get_hour(GM_build_date)), "0", 2);
global.version_string += ":" + string_set_length(string(date_get_minute(GM_build_date)), "0", 2);

game_on = 0

if os_browser!=browser_not_a_browser {
 room_speed=30
}

display_reset(0,0)
//init PP
Sname = part_system_create();
Sauto = 1

  x = 1280
  y = 1280
instance_create(x-80,y-16,cam)

projectname='noname'
lite=0
if os_get_config() = "lite"{lite=1}
ver='v0.9.6.0'
format_ver = 0


if lite=1{ver='lite '+ver}
window_set_caption('파티클 플레이어2 '+ver);


vx=0
vy=0
vh=720
vw=1280
mouseact=-1
//surf=surface_create(1024,640)

backg = -1
backr = 0
backs = 0
sprites=0
parts=0
emits=0
cemit=0
record=0
recd=0
recspr=-10
surf=-10

//zui
with (zui_main()) {
 with (zui_create(0,0, objUIback, 100)) {
  zui_set_anchor(0,0)
  zui_set_size(other.__width,other.__height)
 }
 

 with (zui_create(0, 24, objUIWindow, 13)) {
  zui_set_anchor(0, 0)
  zui_set_size(160,2560)
  windex=1
  }

 with (zui_create(0, 24, objUIMaintree, 12)) {
  zui_set_anchor(0, 0)
  zui_set_size(160,other.__height - 24)
  other.ui_tree = id
  tree_height = __height
  __ystart = __y
  with (zui_create(152, 8, objVSlider)) {
   zui_set_anchor(1, 0);
   zui_set_height(other.__height - 16);
   minimum = 0;
   maximum = 100;
   value = 0;
   target = other.id
   __ystart = __y
   callback = test_callback_vslider;
   other.slider = id
  }
  with (zui_create(0, 0, objUItree)) {
   zui_set_anchor(0, 0);
   caption = "Sprites"
   with (zui_create(64, 4, objUIButton)) {
    zui_set_anchor(0, 0);
    zui_set_size(60, 24);
    caption = "Add";
    callback = pp_add_sprite;
   }
  }
  with (zui_create(0, 0, objUItree)) {
   tree_index = 1
   zui_set_anchor(0, 0);
   caption = "Particles"
   with (zui_create(64, 4, objUIButton)) {
    zui_set_anchor(0, 0);
    zui_set_size(60, 24);
    caption = "Add";
    callback = pp_add_particle;
   }
  }
  with (zui_create(0, 0, objUItree)) {
   tree_index = 2
   zui_set_anchor(0, 0);
   caption = "Emitters"
   with (zui_create(64, 4, objUIButton)) {
    zui_set_anchor(0, 0);
    zui_set_size(60, 24);
    caption = "Add";
    callback = pp_add_emitter;
   }
  }
 }
 with (zui_create(0,0, objUIMenuBar, 10)) {
  zui_set_anchor(0,0)
  zui_set_size(other.__width,24)
  var _file = ui_menu_add(-1, -1, "File");
   ui_menu_add(_file, project_new, "New", "Ctrl+N");
   if os_browser=browser_not_a_browser {
   ui_menu_add(_file, -1, "-");
   ui_menu_add(_file, project_load, "Open", "Ctrl+O");
   ui_menu_add(_file, project_save, "Save", "Ctrl+S");
   ui_menu_add(_file, -1, "-");
   ui_menu_add(_file, menu_exit, "Exit", "Ctrl+X");
   }
  var _edit = ui_menu_add(-1, -1, "Edit");
   ui_menu_add(_edit, menu_clear, "Clear", "Space");
   ui_menu_add(_edit, -1, "-");
   ui_menu_add(_edit, -1, "Undo", "Ctrl+Z");
   ui_menu_add(_edit, -1, "Redo", "Ctrl+Y");
   ui_menu_add(_edit, -1, "-");
   ui_menu_add(_edit, pp_auto_set, "Pause", "Enter");
   ui_menu_add(_edit, pp_particle_randomize, "Randomize", "Ctrl+A");
   ui_menu_add(_edit, pp_record, "Record", "Ctrl+R");
  var _help = ui_menu_add(-1, -1, "Help");
   ui_menu_add(_help, pp_open_option, "Option", "F2");
   ui_menu_add(_help, -1, "-");
   ui_menu_add(_help, menu_about, "About", "F1");
  var _export = ui_menu_add(-1, -1, "Export");
   ui_menu_add(_export, export_clipboard, "Clipboard", "Ctrl+C");
   ui_menu_add(_export, -1, "-");
   ui_menu_add(_export, export_file, "Text file", "Ctrl+E");
  other.ui_menu = id
 }
}


sys.eme[0]=1



if os_browser != browser_not_a_browser {
 project_load_web()
 
 str=''
 str=js_get_url()
 
 
 if string_count('?data=',str)=1{
  str=string_copy(str,string_pos('?data=',str)+6,string_length(str)-string_pos('?data=',str)-5)
  var str = html_load('particleplayer2.dat');
  project_load_json(str)
 }
}


if sprites=0 {
 pp_add_particle()
}
if emits=0 {
 pp_add_emitter()
}

game_on = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>  display_set_gui_size(view_wport[0],view_hport[0])
  with(zui_main()){
   zui_set_size(view_wport[0], view_hport[0]);
   with (objUIback) {
    zui_set_size(other.__width,other.__height)
   }
   with (ui_menu){
    zui_set_width(view_wport[0])
   }
   with (ui_tree){
    zui_set_width(zui_get_width())
    tree_height = view_hport[0]-24
    __height = max(tree_height,__height)
    with (slider){
     zui_set_height(other.tree_height - 16);
    }
   }
   
  }
window_center()
  
  
  
  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_wport[0]=floor(window_get_width()/2)*2
view_hport[0]=floor(window_get_height()/2)*2

view_wview[0]=view_wport[0]
view_hview[0]=view_hport[0]
display_set_gui_size(floor(window_get_width()/2)*2,floor(window_get_height()/2)*2);
with(zui_main()){
 zui_set_size(display_get_gui_width(), display_get_gui_height());
 with (objUIback) {
  zui_set_size(other.__width,other.__height)
 }
 with (ui_menu){
  zui_set_width(display_get_gui_width())
 }
 with (ui_tree){
  zui_set_width(zui_get_width())
  tree_height = display_get_gui_height()-24
  __height = max(tree_height,__height)
  with (slider){
   zui_set_height(other.tree_height - 16);
  }
 }
}
  
  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sys.record=2 and part_particles_count(Sname)&gt;0{
 sys.record=1
}
if sys.record=1 and part_particles_count(Sname)=0{
 sys.record=0
 pp_save_sprite(sys.recspr)
}

if sys.record&gt;0 and surface_exists(surf)=0{
 surf=surface_create(view_wview[0]-160,view_hview[0]-24)
}
if sys.record=0 and surface_exists(surf){
 surface_free(surf)
}



if sys.record=1 and surface_exists(surf){
 part_system_position(Sname,-view_xview[0]-160,-view_yview[0]-24)
  
 surface_set_target(surf);
 if backr = 0 {
  draw_clear_alpha(0,0)
 } else {
  with(objUIback){
   if background_exists(sys.backg) {
    if sys.backs = 0 {
     draw_background_tiled(sys.backg,__x-160,__y)
    } else {
     draw_background_stretched(sys.backg,__x-160,__y - 24,__width,__height)
    }
   } else {
    draw_set_colour(background_colour)
    draw_rectangle(-1,-1,view_wview[0],view_hview[0],0)
   }
  }
 }
 part_system_drawit(Sname);
 surface_reset_target();
 part_system_position(Sname,0,0)
 //surface_save(surf,projectname+'/'+string(recd)+'.png')
 recd+=1
 if sprite_exists(recspr)=0{
  recspr = sprite_create_from_surface(surf,0,0,surface_get_width(surf), surface_get_height(surf), 0, 0,0,0)
 }
 else{
  sprite_add_from_surface(recspr, surf,0,0,surface_get_width(surf), surface_get_height(surf), 0, 0);
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if os_browser=browser_not_a_browser and os_type=os_windows and alarm[0]=-1{
 if view_wview[0]!=floor(window_get_width()/2)*2 or
 view_hview[0]!=floor(window_get_height()/2)*2
 {
  if window_get_width()&lt;480 or window_get_height()&lt;320{
   window_set_size(max(floor(window_get_width()/2)*2,480),
   max(floor(window_get_height()/2)*2,320))
  }
  alarm[0]=1
 }
}

if os_browser!=browser_not_a_browser and alarm[1]=-1{
 if view_wview[0]!=max(floor(browser_width/2)*2,480) or
  view_hview[0]!=max(floor(browser_height/2)*2,320) {
  view_wport[0]=max(floor(browser_width/2)*2,480)
  view_hport[0]=max(floor(browser_height/2)*2,320)
  view_wview[0]=view_wport[0]
  view_hview[0]=view_hport[0]

  window_set_size(view_wport[0],view_hport[0])
  alarm[1]=1
  
 }
}





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if surface_exists(surf){
 draw_set_colour(c_red)
 draw_rectangle(view_xview[0]+160,view_yview[0]+24,
 view_xview[0]+159+surface_get_width(surf),view_yview[0]+23+surface_get_height(surf),1)
}
else{
 if record=2{
  draw_set_colour(c_red)
  draw_rectangle(view_xview[0]+160,view_yview[0]+24,
  view_xview[0]+view_wview[0]-1,view_yview[0]+view_hview[0]-1,1)
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_navy)
draw_line(x-16,y,x+16,y)
draw_line(x,y-16,x,y+16)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
